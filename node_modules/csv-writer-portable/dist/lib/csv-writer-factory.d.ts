import { CsvWriter } from './csv-writer';
import { CsvStringifierFactory } from './csv-stringifier-factory';
import { Field, ObjectStringifierHeader } from './record';
import { ObjectMap } from './lang/object';
export interface ArrayCsvWriterParams {
    path: string;
    header?: string[];
    fieldDelimiter?: string;
    recordDelimiter?: string;
    alwaysQuote?: boolean;
    encoding?: string;
    append?: boolean;
    quoteEmptyFields?: boolean;
    filterFunction?: (value: Field) => Field;
    useBom?: boolean;
}
export interface ObjectCsvWriterParams {
    path: string;
    header: ObjectStringifierHeader;
    fieldDelimiter?: string;
    recordDelimiter?: string;
    headerIdDelimiter?: string;
    alwaysQuote?: boolean;
    encoding?: string;
    append?: boolean;
    quoteEmptyFields?: boolean;
    filterFunction?: (value: Field) => Field;
    useBom?: boolean;
}
export declare class CsvWriterFactory {
    private readonly csvStringifierFactory;
    constructor(csvStringifierFactory: CsvStringifierFactory);
    createArrayCsvWriter<T = unknown>(params: ArrayCsvWriterParams): CsvWriter<T[]>;
    createObjectCsvWriter<T = unknown>(params: ObjectCsvWriterParams): CsvWriter<ObjectMap<T>>;
}
